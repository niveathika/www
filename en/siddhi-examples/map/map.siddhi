-- Defines `CoupleDealInfoStream` having attributes `item1`, `price1`, `item2`, and `price2` with `string` and `double` types.
define stream CoupleDealInfoStream (
                 item1 string, price1 double,
                 item2 string, price2 double);


@info(name = 'Create-map')
from CoupleDealInfoStream
-- Create a map with values of `item1` and `item2` as keys, and `price1` and `price2` as values.
select map:create(item1, price1, item2, price2)
            as itemPriceMap

insert into NewMapStream;


@info(name = 'Check-map')
from NewMapStream
-- Check if `itemPriceMap` is a Map.
select map:isMap(itemPriceMap) as isMap,
-- Check if `itemPriceMap` contains a key `'Cookie'`.
       map:containsKey(itemPriceMap, 'Cookie')
            as isCookiePresent,
-- Check if `itemPriceMap` contains a value `24.0`.
       map:containsValue(itemPriceMap, 24.0)
            as isThereItemWithPrice24,
-- Check if `itemPriceMap` is empty.
       map:isEmpty(itemPriceMap) as isEmpty,
-- Get all keys of `itemPriceMap` as a List.
       map:keys(itemPriceMap) as keys,
-- Get size of `itemPriceMap`.
       map:size(itemPriceMap) as size

insert into MapAnalysisStream;


@info(name = 'Clone-and-update')
from NewMapStream
-- Clone `itemPriceMap`, put `Gift` key with value `1.0` to it, and replace `Cake` key with value `12.0`.
select map:replace(
                   map:put(map:clone(itemPriceMap),
                           "Gift",
                           1.0),
                   "Cake",
                   12.0) as itemPriceMap

insert into ItemInsertedMapStream;



