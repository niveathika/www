Above is a simple example to publish abnormal Glucose reading events to an unavailable HTTP endpoint and error is handled by `wait and retry` mode.

#### prerequisites

Download the mock logger service from [here](https://github.com/mohanvive/siddhi-mock-services/releases/download/v2.0.0/logservice-1.0.0.jar).


#### Input & Output

- Below event is sent to `GlucoseReadingStream` stream,

    [`'Get-1024'`, `'Level2'`, `'1576829362'`, `10348`, `'Alex'`, `'John'`, `250`]

    You could see ConnectException is get printed since logger service is unavailable.

- Then, execute the below command to start the mock logger service.

    `java -jar logservice-1.0.0.jar`

- Now, you could see the event sent in step #1 is get logged in the logger service console as given below.

    `LoggerService:42 - {event={timeStampInLong=1.576829362E9, locationRoom=Get-1024, locationBed=Level2, sensorID=10348.0, patientFullName=Alex John, sensorReadingValue=250.0}}`

